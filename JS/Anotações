1- JavaScript é uma tecnologia client-side, mas ele tbm funciona no server-side.
Js é uma linguagem Orientada a Objeto.

•Bibliografia usadas durante o curso
    -JavaScript O guia definitivo (David Flanagan)
    -JavaScript Guia do Programador (Maurício Samy Silva)
    -MDN ( https://developer.mozilla.org/pt-BR/ )
    -ecma ( https://www.ecma-international.org/ )

2-Variáveis e Tipos Primitivos
( = ) = recebe
var = variável, pode ser mudada mais para frente ( ex : var n1 = 10 ; var n2 = 20 ; var n3 = "Marcos" ; var n4 = 'Victor' e var n5 = `Costa`)
let = variável, não pode ser mudada, quando é dado uma informação para ela, vai ser somente aquela.

• Nome de cada variável se chama IDENTIFICADOR.
    -Podem começar com uma letra, $ ou _;
    -Não pode começar com números;
    -É possivel usar letras ou números;
    -é possivel utilizar acentos e símbolos;
    -Não podem conter espaços;
    -Não podem ser palavras reservadas.

    **********DICAS**********
        -Maiúsculas e minúsculas fazem diferença (ex var a= 10 ; var A = 20);
        -Tente escolher nomes coerentes para variáveis;
        -Evite se tornar um "Progamador alfabeto"(aquele que coloca as variáveis como a1,b2,c3,d4...) ou um "programador contador" (aquele que coloca as variáveis como n1,n2,n3,n4,n5...);

• Inteiros, Float, Strings e Boolean
OBS: no Js (inteiros e float) entram como NUMBER
-Inteiros
    *5
    *18
    *-12

-Float
    *0.5
    *-15.9
    *3.14

-String
    *"Marcos"
    *'Victor'
    *`Costa`

-Boolean
    *true
    *false

typeof = saber qual variável e aquela informação

•Operadores do Js
    -aritméticos
        -(+)SOMA, 
        -(-)SUBTRAÇÃO,
        -(*)MULTIPLICAÇÃO,
        -(/)DIVISÃO REAL,
        -(%)RESTO DA DIVISÃO INTEIRA,
        -(**)POTENCIA,

    (ORDEM DE PRECEDÊNCIA) => () -> ** -> * / % (caso haja mais de um desses na conta, lê-se primeiro da esquerda pra direta.) -> + -

    -atribuição
        -Atribuição Simples ( = ) ex: var a = 5 + 3
        -Auto-Atribuição -> var n = 3 -> n = n + 4 -> n = 7 -> Simplificando fica ( n += 4 ) usa-se se no caso a mesma variável receber ela mesmo ( n -=4 ), ( n *=4 ), ( n /=4 ), ( n **=4 ), ( n %=4 ).
        -Incremento -> ( x++ ), ( x-- ),
        -
        -
    -relacionais
        - ( > ) maior que
        - ( < ) menor que
        - ( >= ) maior ou igual
        - ( <= ) menor ou igual
        - ( == ) igualdade
        - ( != ) não igual / diferente
            •Relacionais de Identidade
                -ex1: 5 == 5 ? "true"
                -ex2: 5 == "5" ? "true" (pq o == não testa o tipo )
                -ex3: 5 === "5" ? "false" (ja o simbolo de 3 =, ele testa sim o tipo.)
                tbm tem o !==
    -lógicos
        - ! ( Negação )
        - && (Conjunção ( E ))
        - || (Disjunção ( OU ))

        OBS: Caso tenha operadores aritméticos, relacionais e lógicos, se faz primeiro nessa ordem -> 1ª Aritméticos, 2ª Relacionais e 3ª os lógicos. se tiver na mesma operação o !, && e o || se faz primeiro o ! dps o && e por ultimo o || . 
    -ternário
    teste(teste logico que da vdd ou false) ? true(é oq vai acontecer se o teste logico der vdd) : false (é oq vai acontecer se o teste logico der falso)
    ex: média >= 7.0 ? "Aprovado" : "Reprovado"
        -?
        -:
-------------------------------------------------------------------------------------------------------------

• DOM 
    - O que é a DOM(Document Object Model) ?
        Modelo de objetos para documentos, é um conjunto de objetos dentro do navegador, que vai dar acesso aos componentes internos do seu website.
    -Árvore DOM
        window.location
        window.document.html.head(dentro de head tem meta, title e etc...) ou body(temos h1, p , div, strong)
        window.history

    -Selecionando
        *Por Marcar(getElementByTagName())
        *Por ID(getElementById())
        *Por Nome(getElementByName())
        *Por Classe(getElementByclass())
        *Por Seletor( querySelector() e querySelectorAll() )

• Eventos no DOM
    -Evento é tudo que pode acontecer com algum determinado elemento.
•Funções
    -Exemplo:

        function ação (parametros) {

        }

• Condições no Js
    -Sequências
    ex01: var n = 3 --> n+= 2 ----> window.alert(n);

    -Condições
        -Desvio Condicional

if ( condição ) {
    bloco de codigo
} else {
    bloco de codigo
}

-Tipos de Condição
    •Condição Simples

    if (condição) {
        bloco de codigo
    }

    •Condição Composta

    if ( condição) {
        bloco de codigo
    } else {
        bloco de codigo
    }
    
    •Condição Aninhadas

    if (condição) {
        bloco de codigo
    } else if (condição) {
        bloco de codigo
    } else if () {
        bloco de codigo
    } else ( condição) {
        bloco de codigo
    }

    •Condição Múltipla
    switch (expressão) {
        case valor 1:
        bloco de codigo
        break
        case valor 2:
        bloco de codigo
        break
        case valor 3:
        bloco de codigo
        break 
        default:
        bloco de codigo
        break
    }